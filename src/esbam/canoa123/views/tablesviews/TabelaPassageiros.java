/*
 * The MIT License
 *
 * Copyright 2023 ACER.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package esbam.canoa123.views.tablesviews;

import esbam.canoa123.model.Passageiros;
import esbam.canoa123.controll.PassageirosController;
import esbam.canoa123.controll.bussines.ValideCampoText;
import esbam.canoa123.controll.bussines.RestringeCampoText;
import esbam.canoa123.controll.bussines.FormataCamposMask;
import esbam.canoa123.views.updateviews.TelaUpdate;
import java.text.ParseException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
/**
 *
 * @author ACER
 */
public class TabelaPassageiros extends javax.swing.JInternalFrame {
    private javax.swing.table.DefaultTableModel table;
    /**
     * Creates new form TelaPassageiro
     */
    public TabelaPassageiros() {
        initComponents();
        componetesInit();
        formatarCampos();
        executeLista();
    }
    
    private void componetesInit(){
        table = (javax.swing.table.DefaultTableModel) tblPassageiros.getModel();
        txtSexo.setText("");
    }
    
    private void executeLista(){
        addRowsTable(new PassageirosController().listaPassageiros());// PEGANDO A LISTA DOS BARCOS REGISTRADOS
    }
    
    private void formatarCampos(){
        try {
            new FormataCamposMask().fieldCPF(txtCpf);
        } catch (ParseException ex) {
            throw new Error("Erro em executar a formatação de cpf");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paneMain = new javax.swing.JPanel();
        scrollTable = new javax.swing.JScrollPane();
        tblPassageiros = new javax.swing.JTable();
        btnReseta = new javax.swing.JButton();
        btnPesquisa = new javax.swing.JButton();
        btnEdita = new javax.swing.JButton();
        btnDeleta = new javax.swing.JButton();
        paneInputs = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSexo = new javax.swing.JTextField();
        jcbSexo = new javax.swing.JComboBox<>();
        txtTelefone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Passageiros");
        setName("inFramePassageiro"); // NOI18N
        setPreferredSize(new java.awt.Dimension(545, 485));

        paneMain.setBackground(new java.awt.Color(60, 14, 78));

        scrollTable.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1)));

        tblPassageiros.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tblPassageiros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "CPF", "Sexo", "Telefone"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollTable.setViewportView(tblPassageiros);
        if (tblPassageiros.getColumnModel().getColumnCount() > 0) {
            tblPassageiros.getColumnModel().getColumn(0).setMinWidth(40);
            tblPassageiros.getColumnModel().getColumn(0).setMaxWidth(50);
            tblPassageiros.getColumnModel().getColumn(1).setMinWidth(160);
            tblPassageiros.getColumnModel().getColumn(2).setMinWidth(150);
            tblPassageiros.getColumnModel().getColumn(3).setMinWidth(40);
            tblPassageiros.getColumnModel().getColumn(3).setMaxWidth(50);
            tblPassageiros.getColumnModel().getColumn(4).setMinWidth(150);
        }

        btnReseta.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnReseta.setForeground(new java.awt.Color(255, 96, 83));
        btnReseta.setText("Resetar");
        btnReseta.setBorderPainted(false);
        btnReseta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReseta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetaActionPerformed(evt);
            }
        });

        btnPesquisa.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnPesquisa.setForeground(new java.awt.Color(255, 96, 83));
        btnPesquisa.setText("Pesquisar");
        btnPesquisa.setBorderPainted(false);
        btnPesquisa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        btnEdita.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnEdita.setForeground(new java.awt.Color(255, 96, 83));
        btnEdita.setText("Editar");
        btnEdita.setBorderPainted(false);
        btnEdita.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEdita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditaActionPerformed(evt);
            }
        });

        btnDeleta.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnDeleta.setForeground(new java.awt.Color(255, 96, 83));
        btnDeleta.setText("Deletar");
        btnDeleta.setBorderPainted(false);
        btnDeleta.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDeleta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletaActionPerformed(evt);
            }
        });

        paneInputs.setBackground(new java.awt.Color(60, 14, 64));
        paneInputs.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(java.awt.SystemColor.textHighlightText);
        jLabel1.setText("Id");

        txtID.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtID.setForeground(new java.awt.Color(0, 0, 0));
        txtID.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIDKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(java.awt.SystemColor.textHighlightText);
        jLabel2.setText("Nome");

        txtNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNome.setForeground(new java.awt.Color(0, 0, 0));
        txtNome.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNomeKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(java.awt.SystemColor.textHighlightText);
        jLabel4.setText("Sexo");

        txtSexo.setEditable(false);
        txtSexo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtSexo.setForeground(new java.awt.Color(0, 0, 0));
        txtSexo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jcbSexo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jcbSexo.setForeground(new java.awt.Color(0, 0, 0));
        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Masculino", "Feminino" }));
        jcbSexo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbSexo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbSexoItemStateChanged(evt);
            }
        });

        txtTelefone.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtTelefone.setForeground(new java.awt.Color(0, 0, 0));
        txtTelefone.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefoneKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(java.awt.SystemColor.textHighlightText);
        jLabel5.setText("Tell");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(java.awt.SystemColor.textHighlightText);
        jLabel3.setText("CPF");

        txtCpf.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        txtCpf.setForeground(new java.awt.Color(0, 0, 0));
        txtCpf.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        javax.swing.GroupLayout paneInputsLayout = new javax.swing.GroupLayout(paneInputs);
        paneInputs.setLayout(paneInputsLayout);
        paneInputsLayout.setHorizontalGroup(
            paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneInputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paneInputsLayout.createSequentialGroup()
                        .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(paneInputsLayout.createSequentialGroup()
                                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(paneInputsLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        paneInputsLayout.setVerticalGroup(
            paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneInputsLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtID)
                    .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                        .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCpf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(paneInputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout paneMainLayout = new javax.swing.GroupLayout(paneMain);
        paneMain.setLayout(paneMainLayout);
        paneMainLayout.setHorizontalGroup(
            paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTable, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneMainLayout.createSequentialGroup()
                        .addComponent(btnPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnReseta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneMainLayout.createSequentialGroup()
                        .addComponent(btnDeleta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdita, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(paneInputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        paneMainLayout.setVerticalGroup(
            paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollTable, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReseta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(paneInputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paneMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEdita, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleta, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(paneMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        consultas();
    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void btnDeletaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletaActionPerformed
        if(tblPassageiros.getSelectedRow() != (-1)){
            int resposta = JOptionPane.showInternalConfirmDialog(null, "Deseja excluir\n\n"
                + "Id: " + tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 0).toString() + "\n"
                + "Nome: " + tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 1).toString() + "\n"
                + "Cpf: "+ tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 2).toString() + "\n"
                + "Sexo: "+ tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 3).toString() + "\n"
                + "Telefone: "+ tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 4).toString() + "\n\n", "Deletando", JOptionPane.YES_NO_OPTION);
            if(resposta == 0){
                exluirPassageiro();
                excluirRows();
                executeLista();
            }
        }else{
            JOptionPane.showMessageDialog(this, "Selecione uma linha!");
        }
    }//GEN-LAST:event_btnDeletaActionPerformed

    private void btnResetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetaActionPerformed
        excluirRows();
        executeLista();
    }//GEN-LAST:event_btnResetaActionPerformed

    private void jcbSexoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbSexoItemStateChanged
        txtSexo.setText((jcbSexo.getSelectedItem().toString().equalsIgnoreCase("selecione")) ? "" : jcbSexo.getSelectedItem().toString());
    }//GEN-LAST:event_jcbSexoItemStateChanged

    private void txtIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyTyped
        new ValideCampoText().validaCamposComNumero(evt);
    }//GEN-LAST:event_txtIDKeyTyped

    private void txtNomeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyTyped
        new RestringeCampoText().restringirCampoDeNumeroEspecial(evt);
    }//GEN-LAST:event_txtNomeKeyTyped

    private void txtTelefoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefoneKeyTyped
        new ValideCampoText().validaCamposComNumero(evt);
        new ValideCampoText().validaCampoTelefone(evt, txtTelefone);
    }//GEN-LAST:event_txtTelefoneKeyTyped

    private void btnEditaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditaActionPerformed
        if(tblPassageiros.getSelectedRow() != -1){
            TelaUpdate TUP = new TelaUpdate(this, tblPassageiros);
            TUP.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Selecione uma linha!");
        }  
    }//GEN-LAST:event_btnEditaActionPerformed

    // MPETODOS
    
    private void exluirPassageiro(){
        int id = Integer.parseInt(tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 0).toString());
        if(new PassageirosController().excluirPassageiro(id)){
            JOptionPane.showMessageDialog(this, "Id " + tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 0).toString() + " deletado!");
        }else{
            JOptionPane.showMessageDialog(this, "Id " + tblPassageiros.getValueAt(tblPassageiros.getSelectedRow(), 0).toString() + " não foi possível deletar!");
        } 
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleta;
    private javax.swing.JButton btnEdita;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JButton btnReseta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> jcbSexo;
    private javax.swing.JPanel paneInputs;
    private javax.swing.JPanel paneMain;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JTable tblPassageiros;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

    
    private void excluirRows(){
        while(table.getRowCount() != 0){
            table.removeRow(0);
        }
    }
    
    private void addRowsTable(Passageiros passageiro){
        table.addRow(new Object[]{
            passageiro.getId(),
            passageiro.getNome(),
            passageiro.getCpf(),
            passageiro.getSexo().substring(0, 1),
            passageiro.getTelefone()
        });
    }
    
    private void addRowsTable(ArrayList<Passageiros> passageiro){
        passageiro.forEach((v) -> {
                int i = table.getRowCount();
                table.addRow(new Object[] {
                passageiro.get(i).getId(),
                passageiro.get(i).getNome(),
                passageiro.get(i).getCpf(),
                passageiro.get(i).getSexo().substring(0, 1),
                passageiro.get(i).getTelefone()
            });
        });
    }
    
    private void consultas(){
        String id = txtID.getText();
        String nome = txtNome.getText();
        String cpf = txtCpf.getText();
        String tell = txtTelefone.getText();
        String sexo = txtSexo.getText();
        if(new PassageirosController().verificaAllCampoNull(nome, cpf, tell, sexo) && id.equals("")){
            JOptionPane.showMessageDialog(null, "Preencha alguns campos");
        }else{
            excluirRows();
            try {
                if(id.isEmpty() && (cpf.startsWith(" "))){
                    addRowsTable(
                    (!sexo.isEmpty()) ? new PassageirosController().listaSexoPassageiro(sexo) :
                    (!nome.isEmpty()) ? new PassageirosController().listNomePassageiros(nome) : new PassageirosController().listaTelefone(tell));
                }else{
                    addRowsTable(
                    (!id.isEmpty()) ? new PassageirosController().buscaPassageiro(Integer.parseInt(id)) : new PassageirosController().buscaCpf(cpf));
                }
            } catch (Exception e) {
                JOptionPane.showInternalMessageDialog(this, "dados não encontrado! verifique as entradas");
            }
        }
    }
}
